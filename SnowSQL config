Most of the time you'll be in the UI and this is for more advanced use cases. But here are a few examples:
1) Automation - This is a command line tool, meaning it can be executed in many different ways. 
Including as part of automated workflows or ETL pipelines to extract/load data or run DDL commands.
2) Loading Internal Stages - You can only load files up to ~50mb through the UI. 
Anything larger would need to be run through SnowSQL using the PUT command.
3) Custom Scripts - You can add it to any other CLI scripts and use it to pull/manipulate data however you want directly.
 This could be for an application or just some ad-hoc scripting.

[connections]          
# *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*
# 
# The Snowflake user password is stored in plain text in this file.
# Pay special attention to the management of this file.
# Thank you.
# 
# SnowSQL directory :  C:\Users\dheer\.snowsql
# SnowSQL config file : config
# *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*

#If a connection doesn't specify a value, it will default to these
#
accountname = LKJREUJ-XX89936
username = dheeraj2112
password = @Dheeraj123
dbname = EDW
schemaname = EDW_TEST
warehousename = COMPUTE_WH
role = ACCOUNTADMIN

[connections.example]
#Can be used in SnowSql as #connect example

accountname = LKJREUJ-XX89936
username = dheeraj2112
password = @Dheeraj123
warehousename = COMPUTE_WH
role = ACCOUNTADMIN

[connections.edw_stg]
#Can be used in SnowSql as #connect edw_stg

accountname = LKJREUJ-XX89936
username = dheeraj2112
password = @Dheeraj123
dbname = EDW
schemaname = EDW_STG
warehousename = COMPUTE_WH
role = ACCOUNTADMIN


[connections.edw]
#Can be used in SnowSql as #connect edw

accountname = LKJREUJ-XX89936
username = dheeraj2112
password = @Dheeraj123
dbname = EDW
schemaname = EDW
warehousename = COMPUTE_WH
role = ACCOUNTADMIN

[connections.edw_extr]
#Can be used in SnowSql as #connect edw_extr

accountname = LKJREUJ-XX89936
username = dheeraj2112
password = @Dheeraj123
dbname = EDW
schemaname = EDW_EXTR
warehousename = COMPUTE_WH
role = ACCOUNTADMIN

[variables]
# SnowSQL defines the variables in this section on startup.
# You can use these variables in SQL statements. For details, see
# https://docs.snowflake.com/en/user-guide/snowsql-use.html#using-variables

# example_variable=27

[options]
# If set to false auto-completion will not occur interactive mode.
auto_completion = True

# main log file location. The file includes the log from SnowSQL main
# executable.
log_file = ~/.snowsql/log

# bootstrap log file location. The file includes the log from SnowSQL bootstrap
# executable.
# log_bootstrap_file = ~/.snowsql/log_bootstrap

# Default log level. Possible values: "CRITICAL", "ERROR", "WARNING", "INFO"
# and "DEBUG".
log_level = INFO

# Timing of sql statments and table rendering.
timing = True

# Table format. Possible values: psql, plain, simple, grid, fancy_grid, pipe,
# orgtbl, rst, mediawiki, html, latex, latex_booktabs, tsv.
# Recommended: psql, fancy_grid and grid.
output_format = psql

# Keybindings: Possible values: emacs, vi.
# Emacs mode: Ctrl-A is home, Ctrl-E is end. All emacs keybindings are available in the REPL.
# When Vi mode is enabled you can use modal editing features offered by Vi in the REPL.
key_bindings = emacs

# OCSP Fail Open Mode.
# The only OCSP scenario which will lead to connection failure would be OCSP response with a
# revoked status. Any other errors or in the OCSP module will not raise an error.
# ocsp_fail_open = True

# Enable temporary credential file for Linux users
# For Linux users, since there are no OS-key-store, an unsecure temporary credential for SSO can be enabled by this option. The default value for this option is False.
# client_store_temporary_credential = True

# Select statement split method (default is to use the sql_split method in snowsql, which does not support 'sql_delimiter')
# sql_split = snowflake.connector.util_text # to use connector's statement_split which has legacy support to 'sql_delimiter'.

# Force the result data to be decoded in utf-8. By default the value is set to false for compatibility with legacy data. It is recommended to set the value to true.
# json_result_force_utf8_decoding = False

# Repository Base URL
# The endpoint to download the SnowSQL main module.
repository_base_url = https://sfc-repo.snowflakecomputing.com/snowsql
